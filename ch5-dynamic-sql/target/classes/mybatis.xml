<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--指定properties文件位置，从类路径根开始找文件-->
    <properties resource="jdbc.properties"/>
    <!--    控制mybatis全局行为的-->
    <settings>
        <!--        设置mybatis输出日志-->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>
    <!--定义别名-->
    <typeAliases>
        <!--第一种方式：
            可以指定一个类型一个自定义别名
            type：自定义类型的全限定名称
            alias：别名-->
        <typeAlias type="org.example.domain.Student" alias="stu"/>
        <!--第二种方式：
            <package> name是包名,这个包中的所有类，类名是别名-->
        <package name="org.example.domain"/>
    </typeAliases>
    <!--        环境配置：数据库的链接信息-->
    <environments default="mydev">
        <!--数据库信息的配置
            ID：唯一值，自定义，表示环境名称-->
        <environment id="mydev">
<!--            -->
            <transactionManager type="JDBC"/>
            <!--datasource: 表示数据源，java体系中，规定实现javax.sql.DataSource接口的都是数据源

            type：指定数据源的类型
                1）POLLED：使用连接池，mybatis会创建PooledDataSource类
                2）UNPOOLED：不使用连接池，在每次执行sql，先创建连接，执行sql，在关闭连接
                               mybatis会创建一个UnpooledDataSource，管理Connection对象的使用-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.user}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--    sql映射文件位置-->
    <mappers>
        <!--        一个mapper标签指定一个文件的位置
                     从类路径开始的路径信息-->
        <mapper resource="org/example/dao/StudentDao.xml"/>
    </mappers>
</configuration>